version: "3.9"

services:
  api: &notify_orchestrator
    container_name: govuk_notify_orchestrator
    build: .
    ports:
      - "8026:8026"
    restart: "no"
    volumes:
      - ".:/notify_orchestrator"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-amqp://guest:guest@rabbitmq:5672/}
      - AWS_STS_REGIONAL_ENDPOINTS=${AWS_STS_REGIONAL_ENDPOINTS:-regional}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-eu-west-2}
      - AWS_REGION=${AWS_REGION:-eu-west-2}
      - AWS_ROLE_ARN=${AWS_ROLE_ARN:-Get this from kubernetes}
      - AWS_WEB_IDENTITY_TOKEN_FILE=${AWS_WEB_IDENTITY_TOKEN_FILE:-Get this from kubernetes}
      - QUEUE_NAME=${QUEUE_NAME:-celery}
      - QUEUE_URL=${QUEUE_URL:-amqp://guest:guest@rabbitmq:5672/}
      - GOVUK_NOTIFY_API_KEY=${GOVUK_NOTIFY_API_KEY:-Generate a key}
      - GOVUK_NOTIFY_API_TESTING_KEY=${GOVUK_NOTIFY_API_TESTING_KEY:Generate a test key}
      - MAX_RETRIES=${MAX_RETRIES:-32}
    depends_on:
      rabbitmq:
        condition: "service_healthy"
        required: false

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672" # Advanced Message Queuing Protocol
      - "15672:15672" # Port for the management API
    volumes:
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5672"]
      interval: 5s
      timeout: 10s
      retries: 3
    profiles:
      # RabbitMQ will not run unless COMPOSE_PROFILES is set to 'RabbitMQ'
      - RabbitMQ

  celery_worker:
    <<: *notify_orchestrator
    container_name: celery_worker
    command:
      - "bin/run_worker.sh"
    ports: []
    depends_on:
      rabbitmq:
        condition: "service_healthy"
        required: false
